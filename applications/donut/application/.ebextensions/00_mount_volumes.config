packages:
  yum:
    nfs-utils: []
files:
  "/home/ec2-user/mount_volumes.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash

      mounted() {
        if [[ "$2" -gt "${3:-5}" ]]; then
          >&2 echo "FATAL: $1 failed to mount after $2 tries."
          exit 1
        fi
        mountpoint -q $1
        local stat=$?
        if [[ "$2" -gt 0 && "$stat" -ne 0 ]]; then
          >&2 echo "$1 is not yet mounted after $2 tries; sleeping for 5 seconds."
          sleep 5
        fi
        return $stat
      }

      config=$(cat /opt/elasticbeanstalk/deploy/configuration/containerconfiguration | jq -r '.optionsettings | {"aws:elasticbeanstalk:application:environment"}[][]')
      for var in $config; do eval $var; done

      : ${MOUNT_UID:=$UID}
      if [ -n $MOUNT_VOLUMES ]; then
        IFS=':' read -a mounts <<< $MOUNT_VOLUMES
        for mount in ${mounts[@]}; do
          IFS='=' read -a m <<< $mount
          mountpoint=${m[0]}
          address=${m[1]}
          mkdir -p ${mountpoint}

          >&2 echo "Mounting $address on $mountpoint..."
          tries=1
          max=10
          mounted $mountpoint $tries $max
          while [ $? -ne 0 ]; do
            tries=$((tries+1))
            timeout 10s mount -t nfs4 ${address}:/ ${mountpoint}
            mounted $mountpoint $tries $max
          done
          chown $MOUNT_UID:${MOUNT_GID:-$MOUNT_UID} ${mountpoint}
          chmod g+wx ${mountpoint}
        done

        # service docker restart
        # existing=$(docker ps -qa --filter "name=^/ecs-agent$")
        # if [ -n $existing ]; then
        #   docker rm $existing
        # fi
        # docker run --name ecs-agent --detach=true --restart=on-failure:10 --volume=/var/run:/var/run \
        #   --volume=/var/log/ecs/:/log --volume=/var/lib/ecs/data:/data --volume=/etc/ecs:/etc/ecs \
        #   --net=host --env-file=/etc/ecs/ecs.config amazon/amazon-ecs-agent:latest
      fi
commands:
  01_stopdocker:
    command: "sudo stop ecs > /dev/null 2>&1 || /bin/true && sudo service docker stop"
  02_killallnetworkbindings:
    command: 'sudo killall docker > /dev/null 2>&1 || /bin/true'
  03_removenetworkinterface:
    command: "rm -f /var/lib/docker/network/files/local-kv.db"
    test: test -f /var/lib/docker/network/files/local-kv.db
  04_mount:
    command: "/home/ec2-user/mount_volumes.sh"
  09_restart:
    command: "service docker start && sudo start ecs && sleep 120s"
